{"remainingRequest":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/babel-loader/lib/index.js!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/CodePen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/CodePen.vue","mtime":1637373342846},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/babel-loader/lib/index.js","mtime":1636918451196},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js","mtime":1636918451281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CodePen.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div id=\"codepen\"></div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"CodePen\",\n  data() {\n    return {\n      chartData: null,\n    };\n  },\n  mounted() {\n    // create the map after the component is mounted\n    this.createCodePen();\n  },\n  methods: {\n    createCodePen() {\n      var treeData =\n  {\n    \"name\": \"Top Level\",\n    \"children\": [\n      { \n        \"name\": \"Level 2: A\",\n        \"children\": [\n          { \"name\": \"Son of A\" },\n          { \"name\": \"Daughter of A\" }\n        ]\n      },\n      { \"name\": \"Level 2: B\" }\n    ]\n  };\n\n// Set the dimensions and margins of the diagram\nvar margin = {top: 20, right: 90, bottom: 30, left: 90},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"#codepen\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\"\n          + margin.left + \",\" + margin.top + \")\");\n\nvar i = 0,\n    duration = 750,\n    root;\n\n// declares a tree layout and assigns the size\nvar treemap = d3.tree().size([height, width]);\n\n// Assigns parent, children, height, depth\nroot = d3.hierarchy(treeData, function(d) { return d.children; });\nroot.x0 = height / 2;\nroot.y0 = 0;\n\n// Collapse after the second level\nroot.children.forEach(collapse);\n\nupdate(root);\n\n// Collapse the node and all it's children\nfunction collapse(d) {\n  if(d.children) {\n    d._children = d.children\n    d._children.forEach(collapse)\n    d.children = null\n  }\n}\n\nfunction update(source) {\n\n  // Assigns the x and y position for the nodes\n  var treeData = treemap(root);\n\n  // Compute the new tree layout.\n  var nodes = treeData.descendants(),\n      links = treeData.descendants().slice(1);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d){ d.y = d.depth * 180});\n\n  // ****************** Nodes section ***************************\n\n  // Update the nodes...\n  var node = svg.selectAll('g.node')\n      .data(nodes, function(d) {return d.id || (d.id = ++i); });\n\n  // Enter any new modes at the parent's previous position.\n  var nodeEnter = node.enter().append('g')\n      .attr('class', 'node')\n      .attr(\"transform\", function() {\n        return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n    })\n    .on('click', click);\n\n  // Add Circle for the nodes\n  nodeEnter.append('circle')\n      .attr('class', 'node')\n      .attr('r', 1e-6)\n      .style(\"fill\", function(d) {\n          return d._children ? \"lightsteelblue\" : \"#fff\";\n      });\n\n  // Add labels for the nodes\n  nodeEnter.append('text')\n      .attr(\"dy\", \".35em\")\n      .attr(\"x\", function(d) {\n          return d.children || d._children ? -13 : 13;\n      })\n      .attr(\"text-anchor\", function(d) {\n          return d.children || d._children ? \"end\" : \"start\";\n      })\n      .text(function(d) { return d.data.name; });\n\n  // UPDATE\n  var nodeUpdate = nodeEnter.merge(node);\n\n  // Transition to the proper position for the node\n  nodeUpdate.transition()\n    .duration(duration)\n    .attr(\"transform\", function(d) { \n        return \"translate(\" + d.y + \",\" + d.x + \")\";\n     });\n\n  // Update the node attributes and style\n  nodeUpdate.select('circle.node')\n    .attr('r', 10)\n    .style(\"fill\", function(d) {\n        return d._children ? \"lightsteelblue\" : \"#fff\";\n    })\n    .attr('cursor', 'pointer');\n\n\n  // Remove any exiting nodes\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function() {\n          return \"translate(\" + source.y + \",\" + source.x + \")\";\n      })\n      .remove();\n\n  // On exit reduce the node circles size to 0\n  nodeExit.select('circle')\n    .attr('r', 1e-6);\n\n  // On exit reduce the opacity of text labels\n  nodeExit.select('text')\n    .style('fill-opacity', 1e-6);\n\n  // ****************** links section ***************************\n\n  // Update the links...\n  var link = svg.selectAll('path.link')\n      .data(links, function(d) { return d.id; });\n\n  // Enter any new links at the parent's previous position.\n  var linkEnter = link.enter().insert('path', \"g\")\n      .attr(\"class\", \"link\")\n      .attr('d', function(){\n        var o = {x: source.x0, y: source.y0}\n        return diagonal(o, o)\n      });\n\n  // UPDATE\n  var linkUpdate = linkEnter.merge(link);\n\n  // Transition back to the parent element position\n  linkUpdate.transition()\n      .duration(duration)\n      .attr('d', function(d){ return diagonal(d, d.parent) });\n\n  // Remove any exiting links\n  var linkExit = link.exit().transition()\n      .duration(duration)\n      .attr('d', function() {\n        var o = {x: source.x, y: source.y}\n        return diagonal(o, o)\n      })\n      linkExit.remove();\n\n  // Store the old positions for transition.\n  nodes.forEach(function(d){\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n\n  // Creates a curved (diagonal) path from parent to the child nodes\n  function diagonal(s, d) {\n\n  var  path = `M ${s.y} ${s.x}\n            C ${(s.y + d.y) / 2} ${s.x},\n              ${(s.y + d.y) / 2} ${d.x},\n              ${d.y} ${d.x}`\n\n    return path\n  }\n\n  // Toggle children on click.\n  function click(event, d) {\n    if (d.children) {\n        d._children = d.children;\n        d.children = null;\n      } else {\n        d.children = d._children;\n        d._children = null;\n      }\n    update(d);\n  }\n}\n    },\n  },\n};\n</script>\n\n <style scoped>\n.node circle {\n  fill: #fff;\n  stroke: steelblue;\n  stroke-width: 3px;\n}\n\n.node text {\n  font: 12px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-width: 2px;\n}\n</style>"],"sourceRoot":"src/views"}]}