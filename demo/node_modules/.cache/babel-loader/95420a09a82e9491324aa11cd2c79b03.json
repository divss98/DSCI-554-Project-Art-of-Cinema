{"remainingRequest":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/babel-loader/lib/index.js!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/IntBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/IntBar.vue","mtime":1636942264694},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/babel-loader/lib/index.js","mtime":1636918451196},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js","mtime":1636918451281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["IntBar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id = 'app'>\n       <marquee scrollamount=20><h1>ACTION</h1></marquee>\n        <br>\n       <div class=\"container\" id=\"chartbuttons\">\n       <div style=\"margin-bottom: 2px;\"> \n        <input type = \"button\" onclick = \"myRating()\" value = \"IMDB Rating\" class=\" btn btn-dark\" style=\"width: 250px;\"> \n        <input type = \"button\" v-on:click=\"myRevenue\" value = \"Revenue\" class=\" btn btn-dark\" style=\"width: 250px;\"> </div>\n        \n        <div class=\"w-100\" style=\"width: auto;\"></div>\n        <div class=\"col\" style=\"margin-bottom: 2px;\"><button style=\"width: 250px;\" type=\"button\" class=\"btn btn-success\" id=\"rate_descending\">Sort descending by value</button> <button style=\"width: 200px;\" type=\"button\" class=\"btn btn-success\" id=\"rate_ascending\">Sort ascending by value</button> <button style=\"width: 200px;\" type=\"button\" class=\"btn btn-success\" id=\"country_alphabetical\">Sort Alphabetically</button> </div>\n\n        <div class=\"row\" style=\"width: auto;\">\n          \n          <div class=\"col\" style=\"margin-bottom: 2px;\">  <button style=\"width: 100px;\" type=\"button\" class=\"btn btn-success\" id=\"top5\">Top 5</button> <button style=\"width: 100px;\" type=\"button\" class=\"btn btn-success\" id=\"bottom5\">Bottom 5</button> <button style=\"width: 100px;\" type=\"button\" class=\"btn btn-success\" id=\"all10\">All 20</button></div>\n\n        </div>\n        <div > <button  style=\"width: 100px;\" type=\"button\" class=\"btn btn-danger\" id=\"reset\">reset</button></div>\n        <div id=\"chart\"></div>\n      </div>\n    \n\n    <div>\n      <table width=\"800px\" height=\"400px\" id=\"table1\"></table>\n    </div>\n\n        </div>\n</template>\n\n<script>\n\nimport * as d3 from 'd3';\n\nexport default {\n\nname: 'd3Chart',\n  data: function () {\n    return {\n      chartData: null,\n    }\n  },\n  methods:{\n      myRating(){\n    var display = document.getElementById('chart');\n    display.innerHTML = \"\";\nvar margin = { top: 70, left: 80, bottom: 80, right: 80 };\nvar width = 900 - margin.left - margin.right;\nvar height = 800 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom+200)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\nvar x = d3.scaleBand();\nvar y = d3.scaleLinear();\n\nvar dataset, all, mode;\nvar xAxis, yAxis;\nvar sort,sortMode;\n\nd3.json(\"action20.json\").then(function(data){\n    dataset = data;\n    all = data;\n    dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); });\n    drawBars();\n    sort = \"Alphabetical\";\n    mode = \"All\";\n});\n\n//sort bars\nd3.select(\"#reset\")\n    .on(\"click\", function () {\n        dataset = all;\n        sort = \"Alphabetical\";\n        mode = \"All\";\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); }\n        ).map(function (d) { return d.Series_Title; }));\n        filterBars();\n        toggle_all()\n        \n    });\nd3.select(\"#country_alphabetical\")\n    .on(\"click\", function () {\n        sort = \"Alphabetical\";\n        sortMode='#country_alphabetical'\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#country_alphabetical')\n    });\nd3.select(\"#rate_ascending\")\n    .on(\"click\", function () {\n        sort = \"Ascending\";\n        sortMode=\"#rate_ascending\"\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#rate_ascending');\n    });\nd3.select(\"#rate_descending\")\n    .on(\"click\", function () {\n        sort = \"Descending\";\n        sortMode=\"#rate_descending\"\n        x.domain(dataset.sort(\n            function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#rate_descending');\n        \n    });\n\n// filter bars\nd3.select(\"#all10\")\n    .on(\"click\", function () {\n        mode = \"All\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).slice(0, 20);\n        toggle_filter('#all10');\n        toggle(sortMode);\n        \n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.IMDB_Rating, b.IMDB_Rating); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); })\n        }\n        \n        filterBars();\n});\n\nd3.select(\"#top5\")\n    .on(\"click\", function () {\n        mode = \"Top 5\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).slice(0, 5);\n        toggle_filter('#top5');\n        toggle(sortMode);\n        \n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.IMDB_Rating, b.IMDB_Rating); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); })\n        }\n\n        filterBars();\n});\n\nd3.select(\"#bottom5\")\n    .on(\"click\", function () {\n        //setMode(\"#bottom5\");\n        mode = \"Bottom 5\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).slice(12, 17);\n        toggle_filter('#bottom5');\n        toggle(sortMode);\n\n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.IMDB_Rating, b.IMDB_Rating); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); })\n        }\n\n        filterBars();\n});\n\nfunction toggle(id) {\n    d3.selectAll('#rate_descending,#rate_ascending,#country_alphabetical')\n        .style('background-color', 'green');\n    d3.select(id)\n        .style('background-color', '#e25a0077');\n    \n}\n\nfunction toggle_all(){\n    d3.select('#reset')\n       .style('background-color', 'red');\n    d3.selectAll('#rate_descending,#rate_ascending,#country_alphabetical,#bottom5,#top5,#all10')\n       .style('background-color', 'green');\n}\n\nfunction toggle_filter(id) {\n    d3.selectAll('#bottom5,#top5,#all10')\n        .style('background-color', 'green');\n    d3.select(id)\n        .style('background-color', '#e25a0077');\n}\n\n\nfunction filterBars() {\n    //update scale\n    x.domain(dataset.map(function (d) { return d.Series_Title; }));\n\n    ////////////////////////////////\n    // DATA JOIN FOR BARS.\n    var bars = svg.selectAll(\".bar\")\n        .data(dataset, function (d) { return d.Series_Title; });\n\n    // UPDATE + ENTER.\n    bars.enter().append(\"rect\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.IMDB_Rating); })\n        .merge(bars)\n        .transition()\n        .duration(750)\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.IMDB_Rating); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) { return height - y(d.IMDB_Rating); });\n\n    // EXIT.\n    bars.exit()\n        .transition()\n        .duration(750)\n        .style(\"opacity\", 0)\n        .remove();\n\n    ////////////////////////////////\n    // DATA JOIN FOR NAMES.\n    var labels = svg.selectAll(\".label\")\n        .data(dataset, function (d) { return d.Series_Title; });\n\n    // UPDATE.\n    labels.transition()\n        .duration(750)\n        .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; });\n\n    // ENTER.\n    // labels.enter().append(\"text\")\n    //     .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; })\n    //     .attr(\"y\", function (d) { return y(d.Gross) + (height - y(d.Gross)) / 2; })\n    //     .style(\"opacity\", 0)\n    //     .transition()\n    //     .duration(750)\n    //     .text(function (d) { return d.Series_Title; })\n    //     .attr(\"class\", \"label\")\n    //     .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; })\n    //     .attr(\"y\", function (d) { return y(d.Gross) + (height - y(d.Gross)) / 2; })\n    //     .style(\"opacity\", 1);\n\n    // EXIT.\n    labels.exit()\n        .transition()\n        .duration(750)\n        .style(\"opacity\", 0)\n        .remove();\n\n    ////////////////////////////////\n    // x_axis.                 \n    xAxis = d3.axisBottom()\n        .scale(x);\n    svg.select(\".x_axis\")\n        .transition()\n        .duration(750)\n        .call(xAxis)\n        .selectAll('text')  \n        .attr('text-anchor', 'start')\n        .attr('transform', 'rotate(25)');\n    // y_axis. \n    svg.select(\".y_axis\")\n        .call(yAxis);\n\n    ////////////////////////////////\n    // title.   \n    // var titles = svg.select(\".title\")              \n    //     .transition()\n    //     .duration(750)\n    //     .text(\"IMDB Rating of\" + mode +  \":\" + sort + \" order\")\n}\n\nfunction transitionBars() {\n    var transition = svg.transition()\n        .duration(750);\n\n    transition.selectAll(\".bar\")\n        .attr(\"x\", function (d) {\n            return x(d.Series_Title);\n        });\n\n    transition.selectAll(\".label\")\n        .attr(\"x\", function (d) {\n            return x(d.Series_Title) + x.bandwidth() / 2;\n        });\n\n    transition.select(\".x_axis\").call(xAxis);\n    transition.select(\".y_axis\").call(yAxis);\n    \n    transition.select(\".title\")\n        .text(\"IMDB Rating \" + mode +  \":\" + sort + \" order\");\n}\n\nfunction drawBars() {\n    x.domain(dataset.map(function (d) { return d.Series_Title; }))\n        .range([0, width])\n        .padding(0.05);\n\n    y.domain([0, d3.max(dataset, function (d) { return d.IMDB_Rating; })])\n        .range([height, 0]);\n\n    svg.selectAll(\".bar\")\n        .data(dataset, function (d) { return d.Series_Title; })\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.IMDB_Rating); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) { return height - y(d.IMDB_Rating); });\n\n    // svg.selectAll(\".label\")\n    //     .data(dataset, function (d) { return d.Series_Title; })\n    //     .enter().append(\"text\")\n    //     .text(function (d) { return d.Series_Title; })\n    //     .attr(\"class\", \"label\")\n    //     .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; })\n    //     .attr(\"y\", function (d) { return y(d.Gross) + (height - y(d.Gross)) / 2; });\n\n    //xAxis;\n    xAxis = d3.axisBottom()\n        .scale(x);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x_axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll('text')\n        .attr('text-anchor', 'start')\n        .attr('transform', 'rotate(25)');\n\n    svg.append(\"text\")\n        .attr(\"class\", \"xlabel\")\n        .text(\"Movie\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", height + 70)\n        .style(\"baseline-shift\", \"nomal\")\n\n    //yAxis;\n    yAxis = d3.axisLeft()\n        .scale(y)\n        .ticks(5, 'd');\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y_axis\")\n        .call(yAxis);\n\n    svg.append(\"text\")\n        .attr('class', 'ylabel')\n        .text(\"IMDB Rating\")\n        .attr(\"x\", - height / 3)\n        .attr(\"y\", - margin.left * 0.7)\n        .attr(\"transform\", \"rotate(-90)\")\n        .style(\"baseline-shift\", \"nomal\")\n    \n    //title\n    svg.append(\"text\")\n        .attr(\"class\", \"title\")\n        .text(\"IMDB Rating of Movies in Alphabetical Order\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", -20)\n        .style(\"baseline-shift\", \"nomal\")\n}},\n    myRevenue()\n{\n    console.log(\"Called Reve\")\n    var display = document.getElementById('chart');\n    display.innerHTML = \"\";\n    var margin = { top: 70, left: 80, bottom: 80, right: 80 };\nvar width = 900 - margin.left - margin.right;\nvar height = 800 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom+200)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\nvar x = d3.scaleBand();\nvar y = d3.scaleLinear();\n\nvar dataset, all, mode;\nvar xAxis, yAxis;\nvar sort,sortMode;\n\nd3.json(\"action20.json\").then(function(data){\n    dataset = data;\n    all = data;\n    dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); });\n    drawBars();\n    sort = \"Alphabetical\";\n    mode = \"All\";\n});\n\n//sort bars\nd3.select(\"#reset\")\n    .on(\"click\", function () {\n        dataset = all;\n        sort = \"Alphabetical\";\n        mode = \"All\";\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); }\n        ).map(function (d) { return d.Series_Title; }));\n        filterBars();\n        toggle_all()\n        \n    });\nd3.select(\"#country_alphabetical\")\n    .on(\"click\", function () {\n        sort = \"Alphabetical\";\n        sortMode='#country_alphabetical'\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#country_alphabetical')\n    });\nd3.select(\"#rate_ascending\")\n    .on(\"click\", function () {\n        sort = \"Ascending\";\n        sortMode=\"#rate_ascending\"\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Gross, b.Gross); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#rate_ascending');\n    });\nd3.select(\"#rate_descending\")\n    .on(\"click\", function () {\n        sort = \"Descending\";\n        sortMode=\"#rate_descending\"\n        x.domain(dataset.sort(\n            function(a, b) { return d3.descending(a.Gross, b.Gross); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#rate_descending');\n        \n    });\n\n// filter bars\nd3.select(\"#all10\")\n    .on(\"click\", function () {\n        mode = \"All\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.Gross, b.Gross); }\n        ).slice(0, 20);\n        toggle_filter('#all10');\n        toggle(sortMode);\n        \n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Gross, b.Gross); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.Gross, b.Gross); })\n        }\n        \n        filterBars();\n});\n\nd3.select(\"#top5\")\n    .on(\"click\", function () {\n        mode = \"Top 5\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.Gross, b.Gross); }\n        ).slice(0, 5);\n        toggle_filter('#top5');\n        toggle(sortMode);\n        \n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Gross, b.Gross); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.Gross, b.Gross); })\n        }\n\n        filterBars();\n});\n\nd3.select(\"#bottom5\")\n    .on(\"click\", function () {\n        //setMode(\"#bottom5\");\n        mode = \"Bottom 5\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.Gross, b.Gross); }\n        ).slice(12, 17);\n        toggle_filter('#bottom5');\n        toggle(sortMode);\n\n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Gross, b.Gross); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.Gross, b.Gross); })\n        }\n\n        filterBars();\n});\n\nfunction toggle(id) {\n    d3.selectAll('#rate_descending,#rate_ascending,#country_alphabetical')\n        .style('background-color', 'green');\n    d3.select(id)\n        .style('background-color', '#e25a0077');\n    \n}\n\nfunction toggle_all(){\n    d3.select('#reset')\n       .style('background-color', 'red');\n    d3.selectAll('#rate_descending,#rate_ascending,#country_alphabetical,#bottom5,#top5,#all10')\n       .style('background-color', 'green');\n}\n\nfunction toggle_filter(id) {\n    d3.selectAll('#bottom5,#top5,#all10')\n        .style('background-color', 'green');\n    d3.select(id)\n        .style('background-color', '#e25a0077');\n}\n\n\nfunction filterBars() {\n    //update scale\n    x.domain(dataset.map(function (d) { return d.Series_Title; }));\n\n    ////////////////////////////////\n    // DATA JOIN FOR BARS.\n    var bars = svg.selectAll(\".bar\")\n        .data(dataset, function (d) { return d.Series_Title; });\n\n    // UPDATE + ENTER.\n    bars.enter().append(\"rect\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.Gross); })\n        .merge(bars)\n        .transition()\n        .duration(750)\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.Gross); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) { return height - y(d.Gross); });\n\n    // EXIT.\n    bars.exit()\n        .transition()\n        .duration(750)\n        .style(\"opacity\", 0)\n        .remove();\n\n    ////////////////////////////////\n    // DATA JOIN FOR NAMES.\n    var labels = svg.selectAll(\".label\")\n        .data(dataset, function (d) { return d.Series_Title; });\n\n    // UPDATE.\n    labels.transition()\n        .duration(750)\n        .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; });\n\n    // ENTER.\n    // labels.enter().append(\"text\")\n    //     .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; })\n    //     .attr(\"y\", function (d) { return y(d.Gross) + (height - y(d.Gross)) / 2; })\n    //     .style(\"opacity\", 0)\n    //     .transition()\n    //     .duration(750)\n    //     .text(function (d) { return d.Series_Title; })\n    //     .attr(\"class\", \"label\")\n    //     .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; })\n    //     .attr(\"y\", function (d) { return y(d.Gross) + (height - y(d.Gross)) / 2; })\n    //     .style(\"opacity\", 1);\n\n    // EXIT.\n    labels.exit()\n        .transition()\n        .duration(750)\n        .style(\"opacity\", 0)\n        .remove();\n\n    ////////////////////////////////\n    // x_axis.                 \n    xAxis = d3.axisBottom()\n        .scale(x);\n    svg.select(\".x_axis\")\n        .transition()\n        .duration(750)\n        .call(xAxis)\n        .selectAll('text')  \n        .attr('text-anchor', 'start')\n        .attr('transform', 'rotate(25)');\n    // y_axis. \n    svg.select(\".y_axis\")\n        .call(yAxis);\n\n    ////////////////////////////////\n    // title.   \n    // var titles = svg.select(\".title\")              \n    //     .transition()\n    //     .duration(750)\n    //     .text(\"Gross Revenue of\" + mode +  \":\" + sort + \" order\")\n}\n\nfunction transitionBars() {\n    var transition = svg.transition()\n        .duration(750);\n\n    transition.selectAll(\".bar\")\n        .attr(\"x\", function (d) {\n            return x(d.Series_Title);\n        });\n\n    transition.selectAll(\".label\")\n        .attr(\"x\", function (d) {\n            return x(d.Series_Title) + x.bandwidth() / 2;\n        });\n\n    transition.select(\".x_axis\").call(xAxis);\n    transition.select(\".y_axis\").call(yAxis);\n    \n    transition.select(\".title\")\n        .text(\"Gross Revenue \" + mode +  \":\" + sort + \" order\");\n}\n\nfunction drawBars() {\n    x.domain(dataset.map(function (d) { return d.Series_Title; }))\n        .range([0, width])\n        .padding(0.05);\n\n    y.domain([0, d3.max(dataset, function (d) { return d.Gross; })])\n        .range([height, 0]);\n\n    svg.selectAll(\".bar\")\n        .data(dataset, function (d) { return d.Series_Title; })\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.Gross); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) { return height - y(d.Gross); });\n\n    // svg.selectAll(\".label\")\n    //     .data(dataset, function (d) { return d.Series_Title; })\n    //     .enter().append(\"text\")\n    //     .text(function (d) { return d.Series_Title; })\n    //     .attr(\"class\", \"label\")\n    //     .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; })\n    //     .attr(\"y\", function (d) { return y(d.Gross) + (height - y(d.Gross)) / 2; });\n\n    //xAxis;\n    xAxis = d3.axisBottom()\n        .scale(x);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x_axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll('text')\n        .attr('text-anchor', 'start')\n        .attr('transform', 'rotate(25)');\n\n    svg.append(\"text\")\n        .attr(\"class\", \"xlabel\")\n        .text(\"Movie\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", height + 70)\n        .style(\"baseline-shift\", \"nomal\")\n\n    //yAxis;\n    yAxis = d3.axisLeft()\n        .scale(y)\n        .ticks(5, 'd');\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y_axis\")\n        .call(yAxis);\n\n    svg.append(\"text\")\n        .attr('class', 'ylabel')\n        .text(\"Gross Revenue in $\")\n        .attr(\"x\", - height / 3)\n        .attr(\"y\", - margin.left * 0.7)\n        .attr(\"transform\", \"rotate(-90)\")\n        .style(\"baseline-shift\", \"nomal\")\n    \n    //title\n    svg.append(\"text\")\n        .attr(\"class\", \"title\")\n        .text(\"Gross Revenue of Movies in Alphabetical Order\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", -20)\n        .style(\"baseline-shift\", \"nomal\")\n}\n}\n\n  },\n  mounted: function () {\n    console.log('mounted');\n    \n    if (!this.$store.state.htmlChartData) {\n        this.myRating();\n        \n    } else {\n      this.myRating();\n    }\n  }\n\n\n}\n</script>\n\n<style>\n\nh1, h2, div {\n    text-align: center; \n}\n\nh1 {\n    margin-bottom: 30px;\n}\nh2 {\n    margin-top: 30px; \n}\n\nli {\n    text-indent:200px;\n    text-align: left;\n    font-size: 16px;\n}\n\n.bar {\n    fill:lightseagreen  ; \n    shape-rendering: crispEdges;}\n\ntext.xlabel, text.ylabel {\n    font-size: 14px;\n    font-weight: bold;\n    text-anchor: middle; }\n\ntext.title {\n    font-size: 30px;\n    font-weight: bold;\n    text-anchor: middle; }\n\ntext.label {\n    font-size: 12px;\n    fill: black;\n    text-anchor: middle;}\n\n.container {\n    margin-bottom: 20px;\n}\n#table1{\n    /* border: 1px solid black; */\n    border-collapse: collapse;\n    margin-left: auto;\n    margin-right: 245px;\n    display: block;\n\n  }\n  /* tr{\n    border: 2px solid green;\n  } */\n  td{\n    border: 1px solid black;\n    text-anchor: middle;\n    text-align:center;\n  }\n\n</style>"],"sourceRoot":"src/views"}]}