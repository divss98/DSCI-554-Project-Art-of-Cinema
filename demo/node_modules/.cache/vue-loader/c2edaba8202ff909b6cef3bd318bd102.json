{"remainingRequest":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/IntBarAdventure.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/IntBarAdventure.vue","mtime":1638513067802},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/css-loader/dist/cjs.js","mtime":1636918451129},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1636918451385},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/postcss-loader/src/index.js","mtime":1636918451187},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js","mtime":1636918451281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMSwgaDIsIGRpdiB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IAp9CgpoMSB7CiAgICBtYXJnaW4tYm90dG9tOiAzMHB4Owp9CmgyIHsKICAgIG1hcmdpbi10b3A6IDMwcHg7IAp9CgpsaSB7CiAgICB0ZXh0LWluZGVudDoyMDBweDsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICBmb250LXNpemU6IDE2cHg7Cn0KCi5iYXIgewogICAgZmlsbDpsaWdodHNlYWdyZWVuICA7IAogICAgc2hhcGUtcmVuZGVyaW5nOiBjcmlzcEVkZ2VzO30KCnRleHQueGxhYmVsLCB0ZXh0LnlsYWJlbCB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIHRleHQtYW5jaG9yOiBtaWRkbGU7IH0KCnRleHQudGl0bGUgewogICAgZm9udC1zaXplOiAzMHB4OwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICB0ZXh0LWFuY2hvcjogbWlkZGxlOyB9Cgp0ZXh0LmxhYmVsIHsKICAgIGZvbnQtc2l6ZTogMTJweDsKICAgIGZpbGw6IGJsYWNrOwogICAgdGV4dC1hbmNob3I6IG1pZGRsZTt9CgouY29udGFpbmVyIHsKICAgIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KI3RhYmxlMXsKICAgIC8qIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyAqLwogICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgIG1hcmdpbi1sZWZ0OiBhdXRvOwogICAgbWFyZ2luLXJpZ2h0OiAyNDVweDsKICAgIGRpc3BsYXk6IGJsb2NrOwoKICB9CiAgLyogdHJ7CiAgICBib3JkZXI6IDJweCBzb2xpZCBncmVlbjsKICB9ICovCiAgdGR7CiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICAgIHRleHQtYW5jaG9yOiBtaWRkbGU7CiAgICB0ZXh0LWFsaWduOmNlbnRlcjsKICB9Cgo="},{"version":3,"sources":["IntBarAdventure.vue"],"names":[],"mappingsqtBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IntBarAdventure.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id = 'app'>\n       <marquee scrollamount=20><h1>ADVENTURE</h1></marquee>\n        <br>\n       <div class=\"container\" id=\"chartbuttons\">\n       <div style=\"margin-bottom: 2px;\"> \n        <input type = \"button\" v-on:click=\"myRating\" value = \"IMDB Rating\" class=\" btn btn-dark\" style=\"width: 250px;\"> \n        <input type = \"button\" v-on:click=\"myRevenue\" value = \"Revenue\" class=\" btn btn-dark\" style=\"width: 250px;\"> </div>\n        \n        <div class=\"w-100\" style=\"width: auto;\"></div>\n        <div class=\"col\" style=\"margin-bottom: 2px;\"><button style=\"width: 250px;\" type=\"button\" class=\"btn btn-success\" id=\"rate_descending\">Sort descending by value</button> <button style=\"width: 200px;\" type=\"button\" class=\"btn btn-success\" id=\"rate_ascending\">Sort ascending by value</button> <button style=\"width: 200px;\" type=\"button\" class=\"btn btn-success\" id=\"country_alphabetical\">Sort Alphabetically</button> </div>\n\n        <div class=\"row\" style=\"width: auto;\">\n          \n          <div class=\"col\" style=\"margin-bottom: 2px;\">  <button style=\"width: 100px;\" type=\"button\" class=\"btn btn-success\" id=\"top5\">Top 5</button> <button style=\"width: 100px;\" type=\"button\" class=\"btn btn-success\" id=\"bottom5\">Bottom 5</button> <button style=\"width: 100px;\" type=\"button\" class=\"btn btn-success\" id=\"all10\">All 20</button></div>\n\n        </div>\n        <div > <button  style=\"width: 100px;\" type=\"button\" class=\"btn btn-danger\" id=\"reset\">reset</button></div>\n        <div id=\"chart\"></div>\n      </div>\n    \n\n    <div>\n      <table width=\"800px\" height=\"400px\" id=\"table1\"></table>\n    </div>\n\n        </div>\n</template>\n\n<script>\n\nimport * as d3 from 'd3';\n\nexport default {\n\nname: 'd3Chart',\n  data: function () {\n    return {\n      chartData: null,\n    }\n  },\n  methods:{\n      myRating(){\n    var display = document.getElementById('chart');\n    display.innerHTML = \"\";\nvar margin = { top: 70, left: 80, bottom: 80, right: 80 };\nvar width = 900 - margin.left - margin.right;\nvar height = 800 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom+200)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\nvar x = d3.scaleBand();\nvar y = d3.scaleLinear();\n\nvar dataset, all, mode;\nvar xAxis, yAxis;\nvar sort,sortMode;\n\nd3.json(\"adventure20.json\").then(function(data){\n    dataset = data;\n    all = data;\n    dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); });\n    drawBars();\n    sort = \"Alphabetical\";\n    mode = \"All\";\n});\n\n//sort bars\nd3.select(\"#reset\")\n    .on(\"click\", function () {\n        dataset = all;\n        sort = \"Alphabetical\";\n        mode = \"All\";\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); }\n        ).map(function (d) { return d.Series_Title; }));\n        filterBars();\n        toggle_all()\n        \n    });\nd3.select(\"#country_alphabetical\")\n    .on(\"click\", function () {\n        sort = \"Alphabetical\";\n        sortMode='#country_alphabetical'\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#country_alphabetical')\n    });\nd3.select(\"#rate_ascending\")\n    .on(\"click\", function () {\n        sort = \"Ascending\";\n        sortMode=\"#rate_ascending\"\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#rate_ascending');\n    });\nd3.select(\"#rate_descending\")\n    .on(\"click\", function () {\n        sort = \"Descending\";\n        sortMode=\"#rate_descending\"\n        x.domain(dataset.sort(\n            function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#rate_descending');\n        \n    });\n\n// filter bars\nd3.select(\"#all10\")\n    .on(\"click\", function () {\n        mode = \"All\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).slice(0, 20);\n        toggle_filter('#all10');\n        toggle(sortMode);\n        \n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.IMDB_Rating, b.IMDB_Rating); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); })\n        }\n        \n        filterBars();\n});\n\nd3.select(\"#top5\")\n    .on(\"click\", function () {\n        mode = \"Top 5\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).slice(0, 5);\n        toggle_filter('#top5');\n        toggle(sortMode);\n        \n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.IMDB_Rating, b.IMDB_Rating); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); })\n        }\n\n        filterBars();\n});\n\nd3.select(\"#bottom5\")\n    .on(\"click\", function () {\n        //setMode(\"#bottom5\");\n        mode = \"Bottom 5\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); }\n        ).slice(12, 17);\n        toggle_filter('#bottom5');\n        toggle(sortMode);\n\n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.IMDB_Rating, b.IMDB_Rating); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.IMDB_Rating, b.IMDB_Rating); })\n        }\n\n        filterBars();\n});\n\nfunction toggle(id) {\n    d3.selectAll('#rate_descending,#rate_ascending,#country_alphabetical')\n        .style('background-color', 'green');\n    d3.select(id)\n        .style('background-color', '#e25a0077');\n    \n}\n\nfunction toggle_all(){\n    d3.select('#reset')\n       .style('background-color', 'red');\n    d3.selectAll('#rate_descending,#rate_ascending,#country_alphabetical,#bottom5,#top5,#all10')\n       .style('background-color', 'green');\n}\n\nfunction toggle_filter(id) {\n    d3.selectAll('#bottom5,#top5,#all10')\n        .style('background-color', 'green');\n    d3.select(id)\n        .style('background-color', '#e25a0077');\n}\n\n\nfunction filterBars() {\n    //update scale\n    x.domain(dataset.map(function (d) { return d.Series_Title; }));\n\n    ////////////////////////////////\n    // DATA JOIN FOR BARS.\n    var bars = svg.selectAll(\".bar\")\n        .data(dataset, function (d) { return d.Series_Title; });\n\n    // UPDATE + ENTER.\n    bars.enter().append(\"rect\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.IMDB_Rating); })\n        .merge(bars)\n        .transition()\n        .duration(750)\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.IMDB_Rating); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) { return height - y(d.IMDB_Rating); });\n\n    // EXIT.\n    bars.exit()\n        .transition()\n        .duration(750)\n        .style(\"opacity\", 0)\n        .remove();\n\n    ////////////////////////////////\n    // DATA JOIN FOR NAMES.\n    var labels = svg.selectAll(\".label\")\n        .data(dataset, function (d) { return d.Series_Title; });\n\n    // UPDATE.\n    labels.transition()\n        .duration(750)\n        .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; });\n\n\n    labels.exit()\n        .transition()\n        .duration(750)\n        .style(\"opacity\", 0)\n        .remove();\n\n    ////////////////////////////////\n    // x_axis.                 \n    xAxis = d3.axisBottom()\n        .scale(x);\n    svg.select(\".x_axis\")\n        .transition()\n        .duration(750)\n        .call(xAxis)\n        .selectAll('text')  \n        .attr('text-anchor', 'start')\n        .attr('transform', 'rotate(25)');\n    // y_axis. \n    svg.select(\".y_axis\")\n        .call(yAxis);\n\n    ////////////////////////////////\n    // title.   \n    // var titles = svg.select(\".title\")              \n    //     .transition()\n    //     .duration(750)\n    //     .text(\"IMDB Rating of\" + mode +  \":\" + sort + \" order\")\n}\n\nfunction transitionBars() {\n    var transition = svg.transition()\n        .duration(750);\n\n    transition.selectAll(\".bar\")\n        .attr(\"x\", function (d) {\n            return x(d.Series_Title);\n        });\n\n    transition.selectAll(\".label\")\n        .attr(\"x\", function (d) {\n            return x(d.Series_Title) + x.bandwidth() / 2;\n        });\n\n    transition.select(\".x_axis\").call(xAxis);\n    transition.select(\".y_axis\").call(yAxis);\n    \n    transition.select(\".title\")\n        .text(\"IMDB Rating \" + mode +  \":\" + sort + \" order\");\n}\n\nfunction drawBars() {\n    x.domain(dataset.map(function (d) { return d.Series_Title; }))\n        .range([0, width])\n        .padding(0.05);\n\n    y.domain([0, d3.max(dataset, function (d) { return d.IMDB_Rating; })])\n        .range([height, 0]);\n\n    svg.selectAll(\".bar\")\n        .data(dataset, function (d) { return d.Series_Title; })\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.IMDB_Rating); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) { return height - y(d.IMDB_Rating); });\n\n    xAxis = d3.axisBottom()\n        .scale(x);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x_axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll('text')\n        .attr('text-anchor', 'start')\n        .attr('transform', 'rotate(25)');\n\n    svg.append(\"text\")\n        .attr(\"class\", \"xlabel\")\n        .text(\"Movie\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", height + 70)\n        .style(\"baseline-shift\", \"nomal\")\n\n    //yAxis;\n    yAxis = d3.axisLeft()\n        .scale(y)\n        .ticks(5, 'd');\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y_axis\")\n        .call(yAxis);\n\n    svg.append(\"text\")\n        .attr('class', 'ylabel')\n        .text(\"IMDB Rating\")\n        .attr(\"x\", - height / 3)\n        .attr(\"y\", - margin.left * 0.7)\n        .attr(\"transform\", \"rotate(-90)\")\n        .style(\"baseline-shift\", \"nomal\")\n    \n    //title\n    svg.append(\"text\")\n        .attr(\"class\", \"title\")\n        .text(\"IMDB Rating of Movies in Alphabetical Order\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", -20)\n        .style(\"baseline-shift\", \"nomal\")\n}\nd3.csv(\"adventure_top20.csv\").then(function(data) {\n    console.log(data)\n    var table = d3.select('#table1');\n    //head\n    var columns = ['Movie', 'RunTime','Director','Star','Overview'];\n    table.append('thead')\n        .append('tr')\n        .style('background', 'gainsboro')\n        .selectAll('td')\n        .data(columns)\n        .enter()\n        .append('td') \n        .text(function(d) {return d; })\n        .style('font-size', '18px')\n        .style('font-weight', 'bold')\n    //body\n    table.append('tbody')\n      .selectAll('tr')\n      .data(data)\n      .enter()\n      .append('tr')\n      .selectAll('td')\n      .data(function(d) { return [d.Series_Title,d.Runtime,d.Director,d.Star1,d.Overview]; })\n      .enter()\n      .append('td')\n      .text(function(d) { return d; })        \n  });\n},\n    myRevenue()\n{\n    console.log(\"Called Reve\")\n    var display = document.getElementById('chart');\n    display.innerHTML = \"\";\n    var margin = { top: 70, left: 80, bottom: 80, right: 80 };\nvar width = 900 - margin.left - margin.right;\nvar height = 800 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom+200)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\nvar x = d3.scaleBand();\nvar y = d3.scaleLinear();\n\nvar dataset, all, mode;\nvar xAxis, yAxis;\nvar sort,sortMode;\n\nd3.json(\"adventure20.json\").then(function(data){\n    dataset = data;\n    all = data;\n    dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); });\n    drawBars();\n    sort = \"Alphabetical\";\n    mode = \"All\";\n});\n\n//sort bars\nd3.select(\"#reset\")\n    .on(\"click\", function () {\n        dataset = all;\n        sort = \"Alphabetical\";\n        mode = \"All\";\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); }\n        ).map(function (d) { return d.Series_Title; }));\n        filterBars();\n        toggle_all()\n        \n    });\nd3.select(\"#country_alphabetical\")\n    .on(\"click\", function () {\n        sort = \"Alphabetical\";\n        sortMode='#country_alphabetical'\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#country_alphabetical')\n    });\nd3.select(\"#rate_ascending\")\n    .on(\"click\", function () {\n        sort = \"Ascending\";\n        sortMode=\"#rate_ascending\"\n        x.domain(dataset.sort(\n            function(a, b) { return d3.ascending(a.Gross, b.Gross); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#rate_ascending');\n    });\nd3.select(\"#rate_descending\")\n    .on(\"click\", function () {\n        sort = \"Descending\";\n        sortMode=\"#rate_descending\"\n        x.domain(dataset.sort(\n            function(a, b) { return d3.descending(a.Gross, b.Gross); }\n        ).map(function (d) { return d.Series_Title; }));\n        transitionBars();\n        toggle('#rate_descending');\n        \n    });\n\n// filter bars\nd3.select(\"#all10\")\n    .on(\"click\", function () {\n        mode = \"All\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.Gross, b.Gross); }\n        ).slice(0, 20);\n        toggle_filter('#all10');\n        toggle(sortMode);\n        \n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Gross, b.Gross); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.Gross, b.Gross); })\n        }\n        \n        filterBars();\n});\n\nd3.select(\"#top5\")\n    .on(\"click\", function () {\n        mode = \"Top 5\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.Gross, b.Gross); }\n        ).slice(0, 5);\n        toggle_filter('#top5');\n        toggle(sortMode);\n        \n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Gross, b.Gross); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.Gross, b.Gross); })\n        }\n\n        filterBars();\n});\n\nd3.select(\"#bottom5\")\n    .on(\"click\", function () {\n        //setMode(\"#bottom5\");\n        mode = \"Bottom 5\"\n        dataset = all.sort(\n            function(a, b) { return d3.descending(a.Gross, b.Gross); }\n        ).slice(12, 17);\n        toggle_filter('#bottom5');\n        toggle(sortMode);\n\n        if (sort === \"Alphabetical\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Series_Title, b.Series_Title); })\n        } else if (sort === \"Ascending\") {\n            dataset.sort(function(a, b) { return d3.ascending(a.Gross, b.Gross); })\n        } else if (sort === \"Descending\") {\n            dataset.sort(function(a, b) { return d3.descending(a.Gross, b.Gross); })\n        }\n\n        filterBars();\n});\n\nfunction toggle(id) {\n    d3.selectAll('#rate_descending,#rate_ascending,#country_alphabetical')\n        .style('background-color', 'green');\n    d3.select(id)\n        .style('background-color', '#e25a0077');\n    \n}\n\nfunction toggle_all(){\n    d3.select('#reset')\n       .style('background-color', 'red');\n    d3.selectAll('#rate_descending,#rate_ascending,#country_alphabetical,#bottom5,#top5,#all10')\n       .style('background-color', 'green');\n}\n\nfunction toggle_filter(id) {\n    d3.selectAll('#bottom5,#top5,#all10')\n        .style('background-color', 'green');\n    d3.select(id)\n        .style('background-color', '#e25a0077');\n}\n\n\nfunction filterBars() {\n    //update scale\n    x.domain(dataset.map(function (d) { return d.Series_Title; }));\n\n    ////////////////////////////////\n    // DATA JOIN FOR BARS.\n    var bars = svg.selectAll(\".bar\")\n        .data(dataset, function (d) { return d.Series_Title; });\n\n    // UPDATE + ENTER.\n    bars.enter().append(\"rect\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.Gross); })\n        .merge(bars)\n        .transition()\n        .duration(750)\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.Gross); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) { return height - y(d.Gross); });\n\n    // EXIT.\n    bars.exit()\n        .transition()\n        .duration(750)\n        .style(\"opacity\", 0)\n        .remove();\n\n    ////////////////////////////////\n    // DATA JOIN FOR NAMES.\n    var labels = svg.selectAll(\".label\")\n        .data(dataset, function (d) { return d.Series_Title; });\n\n    // UPDATE.\n    labels.transition()\n        .duration(750)\n        .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; });\n\n    // ENTER.\n    // labels.enter().append(\"text\")\n    //     .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; })\n    //     .attr(\"y\", function (d) { return y(d.Gross) + (height - y(d.Gross)) / 2; })\n    //     .style(\"opacity\", 0)\n    //     .transition()\n    //     .duration(750)\n    //     .text(function (d) { return d.Series_Title; })\n    //     .attr(\"class\", \"label\")\n    //     .attr(\"x\", function (d) { return x(d.Series_Title) + x.bandwidth() / 2; })\n    //     .attr(\"y\", function (d) { return y(d.Gross) + (height - y(d.Gross)) / 2; })\n    //     .style(\"opacity\", 1);\n\n    // EXIT.\n    labels.exit()\n        .transition()\n        .duration(750)\n        .style(\"opacity\", 0)\n        .remove();\n\n    ////////////////////////////////\n    // x_axis.                 \n    xAxis = d3.axisBottom()\n        .scale(x);\n    svg.select(\".x_axis\")\n        .transition()\n        .duration(750)\n        .call(xAxis)\n        .selectAll('text')  \n        .attr('text-anchor', 'start')\n        .attr('transform', 'rotate(25)');\n    // y_axis. \n    svg.select(\".y_axis\")\n        .call(yAxis);\n\n    ////////////////////////////////\n    // title.   \n    // var titles = svg.select(\".title\")              \n    //     .transition()\n    //     .duration(750)\n    //     .text(\"Gross Revenue of\" + mode +  \":\" + sort + \" order\")\n}\n\nfunction transitionBars() {\n    var transition = svg.transition()\n        .duration(750);\n\n    transition.selectAll(\".bar\")\n        .attr(\"x\", function (d) {\n            return x(d.Series_Title);\n        });\n\n    transition.selectAll(\".label\")\n        .attr(\"x\", function (d) {\n            return x(d.Series_Title) + x.bandwidth() / 2;\n        });\n\n    transition.select(\".x_axis\").call(xAxis);\n    transition.select(\".y_axis\").call(yAxis);\n    \n    transition.select(\".title\")\n        .text(\"Gross Revenue \" + mode +  \":\" + sort + \" order\");\n}\n\nfunction drawBars() {\n    x.domain(dataset.map(function (d) { return d.Series_Title; }))\n        .range([0, width])\n        .padding(0.05);\n\n    y.domain([0, d3.max(dataset, function (d) { return d.Gross; })])\n        .range([height, 0]);\n\n    svg.selectAll(\".bar\")\n        .data(dataset, function (d) { return d.Series_Title; })\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return x(d.Series_Title); })\n        .attr(\"y\", function (d) { return y(d.Gross); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (d) { return height - y(d.Gross); });\n\n    \n    xAxis = d3.axisBottom()\n        .scale(x);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x_axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll('text')\n        .attr('text-anchor', 'start')\n        .attr('transform', 'rotate(25)');\n\n    svg.append(\"text\")\n        .attr(\"class\", \"xlabel\")\n        .text(\"Movie\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", height + 70)\n        .style(\"baseline-shift\", \"nomal\")\n\n    //yAxis;\n    yAxis = d3.axisLeft()\n        .scale(y)\n        .ticks(5, 'd');\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y_axis\")\n        .call(yAxis);\n\n    svg.append(\"text\")\n        .attr('class', 'ylabel')\n        .text(\"Gross Revenue in $\")\n        .attr(\"x\", - height / 3)\n        .attr(\"y\", - margin.left * 0.7)\n        .attr(\"transform\", \"rotate(-90)\")\n        .style(\"baseline-shift\", \"nomal\")\n    \n    //title\n    svg.append(\"text\")\n        .attr(\"class\", \"title\")\n        .text(\"Gross Revenue of Movies in Alphabetical Order\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", -20)\n        .style(\"baseline-shift\", \"nomal\")\n}\n\n}\n\n  },\n  mounted: function () {\n    console.log('mounted');\n    \n    if (!this.$store.state.htmlChartData) {\n        this.myRevenue();\n        \n    } else {\n      this.myRevenue();\n    }\n  }\n\n\n}\n</script>\n\n<style>\n\nh1, h2, div {\n    text-align: center; \n}\n\nh1 {\n    margin-bottom: 30px;\n}\nh2 {\n    margin-top: 30px; \n}\n\nli {\n    text-indent:200px;\n    text-align: left;\n    font-size: 16px;\n}\n\n.bar {\n    fill:lightseagreen  ; \n    shape-rendering: crispEdges;}\n\ntext.xlabel, text.ylabel {\n    font-size: 14px;\n    font-weight: bold;\n    text-anchor: middle; }\n\ntext.title {\n    font-size: 30px;\n    font-weight: bold;\n    text-anchor: middle; }\n\ntext.label {\n    font-size: 12px;\n    fill: black;\n    text-anchor: middle;}\n\n.container {\n    margin-bottom: 20px;\n}\n#table1{\n    /* border: 1px solid black; */\n    border-collapse: collapse;\n    margin-left: auto;\n    margin-right: 245px;\n    display: block;\n\n  }\n  /* tr{\n    border: 2px solid green;\n  } */\n  td{\n    border: 1px solid black;\n    text-anchor: middle;\n    text-align:center;\n  }\n\n</style>"]}]}