{"remainingRequest":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/MapBox_2.vue?vue&type=style&index=0&id=7a9707fc&scoped=true&lang=css&","dependencies":[{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/MapBox_2.vue","mtime":1638514283962},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/css-loader/dist/cjs.js","mtime":1636918451129},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1636918451385},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/postcss-loader/src/index.js","mtime":1636918451187},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js","mtime":1636918451281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI21hcCB7CiAgaGVpZ2h0OiA0MDBweDsKICB3aWR0aDogMTAwJTsKICBtYXgtd2lkdGg6IDYwMHB4OwogIG1hcmdpbjogMCBhdXRvOwogIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtncmV5Owp9Ci50ZXh0LWNvbnRhaW5lciB7CiAgbWF4LXdpZHRoOiA1MDBweDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgdGV4dC1hbGlnbjogbGVmdDsKICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsKICBtYXJnaW46IDAgYXV0bzsgLyogY2VudGVyIHRleHQgY29udGFpbmVyICovCn0K"},{"version":3,"sources":["MapBox_2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MapBox_2.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <main>\n      <div id='map'></div>\n\n<div class='map-overlay'>\n    <fieldset>\n        <input id='feature-filter' type='text' placeholder='Filter results by name' />\n    </fieldset>\n    <div id='feature-listing' class='listing'></div>\n</div>\n\n      </main>\n</template>\n\n<script>\nimport mapboxgl from \"mapbox-gl\";\nexport default {\n  name: \"MapboxMap\",\n  data() {\n    // Set initial data, this.createMap() configures event listeners that update data based on user interaction\n    return {\n      center: [-93.1247, 44.9323], // St. Paul\n      zoom: 10.5\n    };\n  },\n  mounted() {\n    // create the map after the component is mounted\n    this.createMap();\n  },\n  methods: {\n    createMap() {\n        mapboxgl.accessToken = 'pk.eyJ1IjoiYWJyYWFvYWx2ZXMiLCJhIjoiY2oxbTRzZXBmMDA1ZjJ3bzI3ODZucTM2dCJ9.AICaNFFp-vS2tD5mEHulmA';\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/streets-v9',\n    center: [-98, 38.88],\n    maxZoom: 5,\n    minZoom: 1,\n    zoom: 3\n});\n\n// Holds visible airport features for filtering\nvar airports = [];\n\n// Create a popup, but don't add it to the map yet.\nvar popup = new mapboxgl.Popup({\n    closeButton: false\n});\n\nvar filterEl = document.getElementById('feature-filter');\nvar listingEl = document.getElementById('feature-listing');\n\nfunction renderListings(features) {\n    // Clear any existing listings\n    listingEl.innerHTML = '';\n    if (features.length) {\n        features.forEach(function(feature) {\n            var prop = feature.properties;\n            var item = document.createElement('a');\n            item.href = prop.wikipedia;\n            item.target = '_blank';\n            item.textContent = prop.name + ' (' + prop.abbrev + ')';\n            item.addEventListener('mouseover', function() {\n                // Highlight corresponding feature on the map\n                popup.setLngLat(feature.geometry.coordinates)\n                    .setText(feature.properties.name + ' (' + feature.properties.abbrev + ')')\n                    .addTo(map);\n            });\n            listingEl.appendChild(item);\n        });\n\n        // Show the filter input\n        filterEl.parentNode.style.display = 'block';\n    } else {\n        var empty = document.createElement('p');\n        empty.textContent = 'Movie ';\n        listingEl.appendChild(empty);\n\n        // Hide the filter input\n        filterEl.parentNode.style.display = 'none';\n\n        // remove features filter\n        map.setFilter('airport', ['has', 'abbrev']);\n    }\n}\n\nfunction normalize(string) {\n    return string.trim().toLowerCase();\n}\n\n// function getUniqueFeatures(array, comparatorProperty) {\n//     var existingFeatureKeys = {};\n//     // Because features come from tiled vector data, feature geometries may be split\n//     // or duplicated across tile boundaries and, as a result, features may appear\n//     // multiple times in query results.\n//     var uniqueFeatures = array.filter(function(el) {\n//         if (existingFeatureKeys[el.properties[comparatorProperty]]) {\n//             return false;\n//         } else {\n//             existingFeatureKeys[el.properties[comparatorProperty]] = true;\n//             return true;\n//         }\n//     });\n\n//     return uniqueFeatures;\n// }\n\nmap.on('load', function() {\n\n    map.addLayer({\n        \"id\": \"airport\",\n        \"source\": {\n            \"type\": \"vector\",\n            \"url\": \"mapbox://mapbox.04w69w5j\"\n        },\n        \"source-layer\": \"ne_10m_airports\",\n        \"type\": \"circle\",\n    });\n\n   \n    map.on('mousemove', 'airport', function(e) {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = 'pointer';\n\n        // Populate the popup and set its coordinates based on the feature.\n        var feature = e.features[0];\n        popup.setLngLat(feature.geometry.coordinates)\n            .setText(feature.properties.name + ' (' + feature.properties.abbrev + ')')\n            .addTo(map);\n    });\n\n    map.on('mouseleave', 'airport', function() {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n    });\n\n    filterEl.addEventListener('keyup', function(e) {\n        var value = normalize(e.target.value);\n\n        // Filter visible features that don't match the input value.\n        var filtered = airports.filter(function(feature) {\n            var name = normalize(feature.properties.name);\n            var code = normalize(feature.properties.abbrev);\n            return name.indexOf(value) > -1 || code.indexOf(value) > -1;\n        });\n\n        // Populate the sidebar with filtered results\n        renderListings(filtered);\n\n        // Set the filter to populate features into the layer.\n        map.setFilter('airport', ['in', 'abbrev'].concat(filtered.map(function(feature) {\n            return feature.properties.abbrev;\n        })));\n    });\n\n    // Call this function on initialization\n    // passing an empty array to render an empty state\n    renderListings([]);\n});\n    }\n  }\n};\n</script>\n\n<style scoped>\n#map {\n  height: 400px;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  border: 1px solid darkgrey;\n}\n.text-container {\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  align-items: flex-start;\n  margin: 0 auto; /* center text container */\n}\n</style>\n\n\n\n\n\n"]}]}