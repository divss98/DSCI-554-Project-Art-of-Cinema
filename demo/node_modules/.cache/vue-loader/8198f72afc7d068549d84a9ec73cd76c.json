{"remainingRequest":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/MapBox_2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/MapBox_2.vue","mtime":1638514283962},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/babel-loader/lib/index.js","mtime":1636918451196},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js","mtime":1636918451281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtYXBib3hnbCBmcm9tICJtYXBib3gtZ2wiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk1hcGJveE1hcCIsCiAgZGF0YSgpIHsKICAgIC8vIFNldCBpbml0aWFsIGRhdGEsIHRoaXMuY3JlYXRlTWFwKCkgY29uZmlndXJlcyBldmVudCBsaXN0ZW5lcnMgdGhhdCB1cGRhdGUgZGF0YSBiYXNlZCBvbiB1c2VyIGludGVyYWN0aW9uCiAgICByZXR1cm4gewogICAgICBjZW50ZXI6IFstOTMuMTI0NywgNDQuOTMyM10sIC8vIFN0LiBQYXVsCiAgICAgIHpvb206IDEwLjUKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8gY3JlYXRlIHRoZSBtYXAgYWZ0ZXIgdGhlIGNvbXBvbmVudCBpcyBtb3VudGVkCiAgICB0aGlzLmNyZWF0ZU1hcCgpOwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlTWFwKCkgewogICAgICAgIG1hcGJveGdsLmFjY2Vzc1Rva2VuID0gJ3BrLmV5SjFJam9pWVdKeVlXRnZZV3gyWlhNaUxDSmhJam9pWTJveGJUUnpaWEJtTURBMVpqSjNiekkzT0RadWNUTTJkQ0o5LkFJQ2FORkZwLXZTMnRENW1FSHVsbUEnOwp2YXIgbWFwID0gbmV3IG1hcGJveGdsLk1hcCh7CiAgICBjb250YWluZXI6ICdtYXAnLAogICAgc3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvbWFwYm94L3N0cmVldHMtdjknLAogICAgY2VudGVyOiBbLTk4LCAzOC44OF0sCiAgICBtYXhab29tOiA1LAogICAgbWluWm9vbTogMSwKICAgIHpvb206IDMKfSk7CgovLyBIb2xkcyB2aXNpYmxlIGFpcnBvcnQgZmVhdHVyZXMgZm9yIGZpbHRlcmluZwp2YXIgYWlycG9ydHMgPSBbXTsKCi8vIENyZWF0ZSBhIHBvcHVwLCBidXQgZG9uJ3QgYWRkIGl0IHRvIHRoZSBtYXAgeWV0Lgp2YXIgcG9wdXAgPSBuZXcgbWFwYm94Z2wuUG9wdXAoewogICAgY2xvc2VCdXR0b246IGZhbHNlCn0pOwoKdmFyIGZpbHRlckVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZlYXR1cmUtZmlsdGVyJyk7CnZhciBsaXN0aW5nRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmVhdHVyZS1saXN0aW5nJyk7CgpmdW5jdGlvbiByZW5kZXJMaXN0aW5ncyhmZWF0dXJlcykgewogICAgLy8gQ2xlYXIgYW55IGV4aXN0aW5nIGxpc3RpbmdzCiAgICBsaXN0aW5nRWwuaW5uZXJIVE1MID0gJyc7CiAgICBpZiAoZmVhdHVyZXMubGVuZ3RoKSB7CiAgICAgICAgZmVhdHVyZXMuZm9yRWFjaChmdW5jdGlvbihmZWF0dXJlKSB7CiAgICAgICAgICAgIHZhciBwcm9wID0gZmVhdHVyZS5wcm9wZXJ0aWVzOwogICAgICAgICAgICB2YXIgaXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICAgICAgaXRlbS5ocmVmID0gcHJvcC53aWtpcGVkaWE7CiAgICAgICAgICAgIGl0ZW0udGFyZ2V0ID0gJ19ibGFuayc7CiAgICAgICAgICAgIGl0ZW0udGV4dENvbnRlbnQgPSBwcm9wLm5hbWUgKyAnICgnICsgcHJvcC5hYmJyZXYgKyAnKSc7CiAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAvLyBIaWdobGlnaHQgY29ycmVzcG9uZGluZyBmZWF0dXJlIG9uIHRoZSBtYXAKICAgICAgICAgICAgICAgIHBvcHVwLnNldExuZ0xhdChmZWF0dXJlLmdlb21ldHJ5LmNvb3JkaW5hdGVzKQogICAgICAgICAgICAgICAgICAgIC5zZXRUZXh0KGZlYXR1cmUucHJvcGVydGllcy5uYW1lICsgJyAoJyArIGZlYXR1cmUucHJvcGVydGllcy5hYmJyZXYgKyAnKScpCiAgICAgICAgICAgICAgICAgICAgLmFkZFRvKG1hcCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBsaXN0aW5nRWwuYXBwZW5kQ2hpbGQoaXRlbSk7CiAgICAgICAgfSk7CgogICAgICAgIC8vIFNob3cgdGhlIGZpbHRlciBpbnB1dAogICAgICAgIGZpbHRlckVsLnBhcmVudE5vZGUuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICB9IGVsc2UgewogICAgICAgIHZhciBlbXB0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTsKICAgICAgICBlbXB0eS50ZXh0Q29udGVudCA9ICdNb3ZpZSAnOwogICAgICAgIGxpc3RpbmdFbC5hcHBlbmRDaGlsZChlbXB0eSk7CgogICAgICAgIC8vIEhpZGUgdGhlIGZpbHRlciBpbnB1dAogICAgICAgIGZpbHRlckVsLnBhcmVudE5vZGUuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKCiAgICAgICAgLy8gcmVtb3ZlIGZlYXR1cmVzIGZpbHRlcgogICAgICAgIG1hcC5zZXRGaWx0ZXIoJ2FpcnBvcnQnLCBbJ2hhcycsICdhYmJyZXYnXSk7CiAgICB9Cn0KCmZ1bmN0aW9uIG5vcm1hbGl6ZShzdHJpbmcpIHsKICAgIHJldHVybiBzdHJpbmcudHJpbSgpLnRvTG93ZXJDYXNlKCk7Cn0KCi8vIGZ1bmN0aW9uIGdldFVuaXF1ZUZlYXR1cmVzKGFycmF5LCBjb21wYXJhdG9yUHJvcGVydHkpIHsKLy8gICAgIHZhciBleGlzdGluZ0ZlYXR1cmVLZXlzID0ge307Ci8vICAgICAvLyBCZWNhdXNlIGZlYXR1cmVzIGNvbWUgZnJvbSB0aWxlZCB2ZWN0b3IgZGF0YSwgZmVhdHVyZSBnZW9tZXRyaWVzIG1heSBiZSBzcGxpdAovLyAgICAgLy8gb3IgZHVwbGljYXRlZCBhY3Jvc3MgdGlsZSBib3VuZGFyaWVzIGFuZCwgYXMgYSByZXN1bHQsIGZlYXR1cmVzIG1heSBhcHBlYXIKLy8gICAgIC8vIG11bHRpcGxlIHRpbWVzIGluIHF1ZXJ5IHJlc3VsdHMuCi8vICAgICB2YXIgdW5pcXVlRmVhdHVyZXMgPSBhcnJheS5maWx0ZXIoZnVuY3Rpb24oZWwpIHsKLy8gICAgICAgICBpZiAoZXhpc3RpbmdGZWF0dXJlS2V5c1tlbC5wcm9wZXJ0aWVzW2NvbXBhcmF0b3JQcm9wZXJ0eV1dKSB7Ci8vICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKLy8gICAgICAgICB9IGVsc2UgewovLyAgICAgICAgICAgICBleGlzdGluZ0ZlYXR1cmVLZXlzW2VsLnByb3BlcnRpZXNbY29tcGFyYXRvclByb3BlcnR5XV0gPSB0cnVlOwovLyAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKLy8gICAgICAgICB9Ci8vICAgICB9KTsKCi8vICAgICByZXR1cm4gdW5pcXVlRmVhdHVyZXM7Ci8vIH0KCm1hcC5vbignbG9hZCcsIGZ1bmN0aW9uKCkgewoKICAgIG1hcC5hZGRMYXllcih7CiAgICAgICAgImlkIjogImFpcnBvcnQiLAogICAgICAgICJzb3VyY2UiOiB7CiAgICAgICAgICAgICJ0eXBlIjogInZlY3RvciIsCiAgICAgICAgICAgICJ1cmwiOiAibWFwYm94Oi8vbWFwYm94LjA0dzY5dzVqIgogICAgICAgIH0sCiAgICAgICAgInNvdXJjZS1sYXllciI6ICJuZV8xMG1fYWlycG9ydHMiLAogICAgICAgICJ0eXBlIjogImNpcmNsZSIsCiAgICB9KTsKCiAgIAogICAgbWFwLm9uKCdtb3VzZW1vdmUnLCAnYWlycG9ydCcsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAvLyBDaGFuZ2UgdGhlIGN1cnNvciBzdHlsZSBhcyBhIFVJIGluZGljYXRvci4KICAgICAgICBtYXAuZ2V0Q2FudmFzKCkuc3R5bGUuY3Vyc29yID0gJ3BvaW50ZXInOwoKICAgICAgICAvLyBQb3B1bGF0ZSB0aGUgcG9wdXAgYW5kIHNldCBpdHMgY29vcmRpbmF0ZXMgYmFzZWQgb24gdGhlIGZlYXR1cmUuCiAgICAgICAgdmFyIGZlYXR1cmUgPSBlLmZlYXR1cmVzWzBdOwogICAgICAgIHBvcHVwLnNldExuZ0xhdChmZWF0dXJlLmdlb21ldHJ5LmNvb3JkaW5hdGVzKQogICAgICAgICAgICAuc2V0VGV4dChmZWF0dXJlLnByb3BlcnRpZXMubmFtZSArICcgKCcgKyBmZWF0dXJlLnByb3BlcnRpZXMuYWJicmV2ICsgJyknKQogICAgICAgICAgICAuYWRkVG8obWFwKTsKICAgIH0pOwoKICAgIG1hcC5vbignbW91c2VsZWF2ZScsICdhaXJwb3J0JywgZnVuY3Rpb24oKSB7CiAgICAgICAgbWFwLmdldENhbnZhcygpLnN0eWxlLmN1cnNvciA9ICcnOwogICAgICAgIHBvcHVwLnJlbW92ZSgpOwogICAgfSk7CgogICAgZmlsdGVyRWwuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbihlKSB7CiAgICAgICAgdmFyIHZhbHVlID0gbm9ybWFsaXplKGUudGFyZ2V0LnZhbHVlKTsKCiAgICAgICAgLy8gRmlsdGVyIHZpc2libGUgZmVhdHVyZXMgdGhhdCBkb24ndCBtYXRjaCB0aGUgaW5wdXQgdmFsdWUuCiAgICAgICAgdmFyIGZpbHRlcmVkID0gYWlycG9ydHMuZmlsdGVyKGZ1bmN0aW9uKGZlYXR1cmUpIHsKICAgICAgICAgICAgdmFyIG5hbWUgPSBub3JtYWxpemUoZmVhdHVyZS5wcm9wZXJ0aWVzLm5hbWUpOwogICAgICAgICAgICB2YXIgY29kZSA9IG5vcm1hbGl6ZShmZWF0dXJlLnByb3BlcnRpZXMuYWJicmV2KTsKICAgICAgICAgICAgcmV0dXJuIG5hbWUuaW5kZXhPZih2YWx1ZSkgPiAtMSB8fCBjb2RlLmluZGV4T2YodmFsdWUpID4gLTE7CiAgICAgICAgfSk7CgogICAgICAgIC8vIFBvcHVsYXRlIHRoZSBzaWRlYmFyIHdpdGggZmlsdGVyZWQgcmVzdWx0cwogICAgICAgIHJlbmRlckxpc3RpbmdzKGZpbHRlcmVkKTsKCiAgICAgICAgLy8gU2V0IHRoZSBmaWx0ZXIgdG8gcG9wdWxhdGUgZmVhdHVyZXMgaW50byB0aGUgbGF5ZXIuCiAgICAgICAgbWFwLnNldEZpbHRlcignYWlycG9ydCcsIFsnaW4nLCAnYWJicmV2J10uY29uY2F0KGZpbHRlcmVkLm1hcChmdW5jdGlvbihmZWF0dXJlKSB7CiAgICAgICAgICAgIHJldHVybiBmZWF0dXJlLnByb3BlcnRpZXMuYWJicmV2OwogICAgICAgIH0pKSk7CiAgICB9KTsKCiAgICAvLyBDYWxsIHRoaXMgZnVuY3Rpb24gb24gaW5pdGlhbGl6YXRpb24KICAgIC8vIHBhc3NpbmcgYW4gZW1wdHkgYXJyYXkgdG8gcmVuZGVyIGFuIGVtcHR5IHN0YXRlCiAgICByZW5kZXJMaXN0aW5ncyhbXSk7Cn0pOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["MapBox_2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MapBox_2.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <main>\n      <div id='map'></div>\n\n<div class='map-overlay'>\n    <fieldset>\n        <input id='feature-filter' type='text' placeholder='Filter results by name' />\n    </fieldset>\n    <div id='feature-listing' class='listing'></div>\n</div>\n\n      </main>\n</template>\n\n<script>\nimport mapboxgl from \"mapbox-gl\";\nexport default {\n  name: \"MapboxMap\",\n  data() {\n    // Set initial data, this.createMap() configures event listeners that update data based on user interaction\n    return {\n      center: [-93.1247, 44.9323], // St. Paul\n      zoom: 10.5\n    };\n  },\n  mounted() {\n    // create the map after the component is mounted\n    this.createMap();\n  },\n  methods: {\n    createMap() {\n        mapboxgl.accessToken = 'pk.eyJ1IjoiYWJyYWFvYWx2ZXMiLCJhIjoiY2oxbTRzZXBmMDA1ZjJ3bzI3ODZucTM2dCJ9.AICaNFFp-vS2tD5mEHulmA';\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/streets-v9',\n    center: [-98, 38.88],\n    maxZoom: 5,\n    minZoom: 1,\n    zoom: 3\n});\n\n// Holds visible airport features for filtering\nvar airports = [];\n\n// Create a popup, but don't add it to the map yet.\nvar popup = new mapboxgl.Popup({\n    closeButton: false\n});\n\nvar filterEl = document.getElementById('feature-filter');\nvar listingEl = document.getElementById('feature-listing');\n\nfunction renderListings(features) {\n    // Clear any existing listings\n    listingEl.innerHTML = '';\n    if (features.length) {\n        features.forEach(function(feature) {\n            var prop = feature.properties;\n            var item = document.createElement('a');\n            item.href = prop.wikipedia;\n            item.target = '_blank';\n            item.textContent = prop.name + ' (' + prop.abbrev + ')';\n            item.addEventListener('mouseover', function() {\n                // Highlight corresponding feature on the map\n                popup.setLngLat(feature.geometry.coordinates)\n                    .setText(feature.properties.name + ' (' + feature.properties.abbrev + ')')\n                    .addTo(map);\n            });\n            listingEl.appendChild(item);\n        });\n\n        // Show the filter input\n        filterEl.parentNode.style.display = 'block';\n    } else {\n        var empty = document.createElement('p');\n        empty.textContent = 'Movie ';\n        listingEl.appendChild(empty);\n\n        // Hide the filter input\n        filterEl.parentNode.style.display = 'none';\n\n        // remove features filter\n        map.setFilter('airport', ['has', 'abbrev']);\n    }\n}\n\nfunction normalize(string) {\n    return string.trim().toLowerCase();\n}\n\n// function getUniqueFeatures(array, comparatorProperty) {\n//     var existingFeatureKeys = {};\n//     // Because features come from tiled vector data, feature geometries may be split\n//     // or duplicated across tile boundaries and, as a result, features may appear\n//     // multiple times in query results.\n//     var uniqueFeatures = array.filter(function(el) {\n//         if (existingFeatureKeys[el.properties[comparatorProperty]]) {\n//             return false;\n//         } else {\n//             existingFeatureKeys[el.properties[comparatorProperty]] = true;\n//             return true;\n//         }\n//     });\n\n//     return uniqueFeatures;\n// }\n\nmap.on('load', function() {\n\n    map.addLayer({\n        \"id\": \"airport\",\n        \"source\": {\n            \"type\": \"vector\",\n            \"url\": \"mapbox://mapbox.04w69w5j\"\n        },\n        \"source-layer\": \"ne_10m_airports\",\n        \"type\": \"circle\",\n    });\n\n   \n    map.on('mousemove', 'airport', function(e) {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = 'pointer';\n\n        // Populate the popup and set its coordinates based on the feature.\n        var feature = e.features[0];\n        popup.setLngLat(feature.geometry.coordinates)\n            .setText(feature.properties.name + ' (' + feature.properties.abbrev + ')')\n            .addTo(map);\n    });\n\n    map.on('mouseleave', 'airport', function() {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n    });\n\n    filterEl.addEventListener('keyup', function(e) {\n        var value = normalize(e.target.value);\n\n        // Filter visible features that don't match the input value.\n        var filtered = airports.filter(function(feature) {\n            var name = normalize(feature.properties.name);\n            var code = normalize(feature.properties.abbrev);\n            return name.indexOf(value) > -1 || code.indexOf(value) > -1;\n        });\n\n        // Populate the sidebar with filtered results\n        renderListings(filtered);\n\n        // Set the filter to populate features into the layer.\n        map.setFilter('airport', ['in', 'abbrev'].concat(filtered.map(function(feature) {\n            return feature.properties.abbrev;\n        })));\n    });\n\n    // Call this function on initialization\n    // passing an empty array to render an empty state\n    renderListings([]);\n});\n    }\n  }\n};\n</script>\n\n<style scoped>\n#map {\n  height: 400px;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  border: 1px solid darkgrey;\n}\n.text-container {\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  align-items: flex-start;\n  margin: 0 auto; /* center text container */\n}\n</style>\n\n\n\n\n\n"]}]}