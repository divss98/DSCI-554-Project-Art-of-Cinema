{"remainingRequest":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/MapBox.vue?vue&type=style&index=0&id=28892609&scoped=true&lang=css&","dependencies":[{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/src/views/MapBox.vue","mtime":1636929884227},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/css-loader/dist/cjs.js","mtime":1636918451129},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1636918451385},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/postcss-loader/src/index.js","mtime":1636918451187},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/project-rad/project-src-vue-app/node_modules/vue-loader/lib/index.js","mtime":1636918451281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI21hcCB7CiAgaGVpZ2h0OiA0MDBweDsKICB3aWR0aDogMTAwJTsKICBtYXgtd2lkdGg6IDYwMHB4OwogIG1hcmdpbjogMCBhdXRvOwogIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtncmV5Owp9Ci50ZXh0LWNvbnRhaW5lciB7CiAgbWF4LXdpZHRoOiA1MDBweDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgdGV4dC1hbGlnbjogbGVmdDsKICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsKICBtYXJnaW46IDAgYXV0bzsgLyogY2VudGVyIHRleHQgY29udGFpbmVyICovCn0K"},{"version":3,"sources":["MapBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MapBox.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <main>\n    <div class=\"text-container\">\n      <p>Center: {{ center }}</p>\n      <p>Zoom: {{ zoom }}</p>\n    </div>\n\n    <div id=\"map\"></div>\n  </main>\n</template>\n\n<script>\nimport mapboxgl from \"mapbox-gl\";\nexport default {\n  name: \"MapboxMap\",\n  data() {\n    // Set initial data, this.createMap() configures event listeners that update data based on user interaction\n    return {\n      center: [-93.1247, 44.9323], // St. Paul\n      zoom: 10.5\n    };\n  },\n  mounted() {\n    // create the map after the component is mounted\n    this.createMap();\n  },\n  methods: {\n    createMap() {\n      // instantiate map.  this method runs once after the vue component is mounted to the dom\n      this.map = new mapboxgl.Map({\n        accessToken:\n          \"pk.eyJ1IjoiYmZyaWVkbHkiLCJhIjoiY2p4bHd1OXdpMGFycDN0bzFiNWR4d2VyNyJ9.3hQjvgyoPoCuRx-Hqr_BFQ\",\n        container: \"map\",\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        minzoom: 5,\n        center: this.center, // use initial data as default\n        zoom: this.zoom,\n        hash: true // sets url's hash to #zoom/lat/lng\n      });\n      // set mapbox event listeners to update Vue component data\n      this.map.on(\"move\", () => {\n        // set the vue instance's data.center to the results of the mapbox instance method for getting the center\n        this.center = this.map.getCenter();\n      });\n      this.map.on(\"zoom\", () => {\n        // set the vue instance's data.zoom to the results of the mapbox instance method for getting the zoom\n        this.zoom = this.map.getZoom();\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n#map {\n  height: 400px;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  border: 1px solid darkgrey;\n}\n.text-container {\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  align-items: flex-start;\n  margin: 0 auto; /* center text container */\n}\n</style>"]}]}