{"remainingRequest":"/Users/rushishah/Desktop/DSCI_554/PROJECT/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rushishah/Desktop/DSCI_554/PROJECT/vue-app/src/views/HTMLChart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/vue-app/src/views/HTMLChart.vue","mtime":1633289722000},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/vue-app/node_modules/css-loader/dist/cjs.js","mtime":1636918451129},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/vue-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1636918451385},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/vue-app/node_modules/postcss-loader/src/index.js","mtime":1636918451187},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1636918450991},{"path":"/Users/rushishah/Desktop/DSCI_554/PROJECT/vue-app/node_modules/vue-loader/lib/index.js","mtime":1636918451281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRpdGxlIHsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIGZvbnQtc2l6ZTogMTJweDsKfQouaXRlbSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBtYXJnaW4tYm90dG9tOiA1cHg7Cn0KLmJhciB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgYmFja2dyb3VuZC1jb2xvcjojN2FiY2ZmOwogIGhlaWdodDogMjBweDsKfQoubGFiZWwgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB0ZXh0LWFsaWduOiByaWdodDsKICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogIGxpbmUtaGVpZ2h0OiAyMHB4OwogIHdpZHRoOiAyMCU7CiAgZm9udC1zaXplOiAxMnB4OwogIG1hcmdpbi1yaWdodDogMTJweDsKfQoudmFsdWUgewogIGNvbG9yOiNlZWU7CiAgZm9udC1mYW1pbHk6ICdDb3VyaWVyIE5ldycsIENvdXJpZXIsIG1vbm9zcGFjZTsKICBmb250LXdlaWdodDogYm9sZGVyOwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgbGluZS1oZWlnaHQ6IDIwcHg7CiAgbWFyZ2luLXJpZ2h0OiA1cHg7CiAgZm9udC1zaXplOiAxMnB4Owp9Cg=="},{"version":3,"sources":["HTMLChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HTMLChart.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"htmlChart\">\n\n    <!-- data binding using text interpolation with the “Mustache” syntax -->\n    <div>Here is the data: {{JSON.stringify(chartData)}}</div>\n\n    <div class=\"title\">Top 10 COVID-19 confirmed in US, Aug 31 2020 (source Johns Hopkins University)</div>\n\n    <!-- v-for directive to render a list of items based on an array -->\n    <div class=\"item\" v-for=\"(item, index) in chartData\" :key=\"index\">\n      <div class=\"label\"> {{item.label}} </div>\n      \n      <!-- :style is a short-hand for v-bind:style to allow data binding on component attributes -->\n      <div class=\"bar\" :style=\"'width:' + item.value / 1000 + 'px;'\">\n        <span class=\"value\">{{Number(item.value).toLocaleString()}}</span>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\nexport default {\n  name: 'htmlChart',\n  data: function () {\n    return {\n      chartData: null,\n    }\n  },  \n  mounted: function () {\n    console.log('mounted');\n    \n    // `this` points to the component instance\n    //if htmlChartData is not in the store we fetch-it\n    if (!this.$store.state.htmlChartData) {\n      axios.get('covid-19-confirmed-083120.json').then(result => {\n        this.chartData = result.data;  \n        console.log('chartData set from file');\n        console.log('chartData contains', this.chartData.length, 'rows');\n        this.$store.commit('htmlChartData', this.chartData);\n        });\n    } else {\n      this.chartData = this.$store.state.htmlChartData;\n      console.log('chartData set from store');\n      console.log('chartData contains', this.chartData.length, 'rows');\n    }\n  }\n}\n</script>\n\n<style>\n.title {\n  margin-bottom: 10px;\n  font-size: 12px;\n}\n.item {\n  text-align: left;\n  margin-bottom: 5px;\n}\n.bar {\n  display: inline-block;\n  text-align: right;\n  vertical-align: middle;\n  background-color:#7abcff;\n  height: 20px;\n}\n.label {\n  display: inline-block;\n  text-align: right;\n  vertical-align: middle;\n  line-height: 20px;\n  width: 20%;\n  font-size: 12px;\n  margin-right: 12px;\n}\n.value {\n  color:#eee;\n  font-family: 'Courier New', Courier, monospace;\n  font-weight: bolder;\n  vertical-align: middle;\n  line-height: 20px;\n  margin-right: 5px;\n  font-size: 12px;\n}\n</style>\n"]}]}